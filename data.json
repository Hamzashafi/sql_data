{
  "title": "Modified Dashboard",  # Changed title
  "editable": true,
  "time": {
    "from": "now-1d",  # Changed time range 
    "to": "now"
  },
  "panels": [
    {
      "title": "Resource Utilization",  # Changed PT
      "datasource": {
        "type": "mysql",
        "uid": "a7f5f69d-decf-4f7e-b04f-a8d183147083"
      },
      "type": "graph",  # Changed panel type to graph
      "options": {
        "colorMode": "series",  
        "graphMode": "line",  # Changed graph mode to line
        "reduceOptions": {
          "calcs": ["avg"]  
        }
      },
      "targets": [
        {
          "target": "SELECT avg(cpu_usage) FROM servers GROUP BY server_name",  # Changed target query to calculate average CPU usage
          "refId": "A"
        }
      ],
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 0
      }
    },
    {
      "title": "Top 5 Memory Consumers", 
      "datasource": {
        "type": "mysql",
        "uid": "a7f5f69d-decf-4f7e-b04f-a8d183147083"
      },
      "type": "table",  
      "options": {
        "sort": {
          "desc": true, 
          "field": 1  # Sort by second column (index 1)
        }
      },
      "targets": [
        {
          "target": "SELECT process_name, SUM(memory_usage) AS memory_used FROM processes GROUP BY process_name ORDER BY memory_used DESC LIMIT 5",  # Changed target query to sum memory usage
          "refId": "A"
        }
      ],
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 8
      }
    }
  ]
}


                                              -------------------------



{
  "title": "Server Monitoring",
  "description": "insights into web server health",
  "rows": [
    {
      "title": "Overview",
      "height": "25%",
      "panels": [
        {
          "title": "CPU Usage",
          "type": "gauge",
          "span": 6,
          "datasource": "prometheus",
          "targets": [
            {
              "target": "node_load1"
            }
          ],
          
            "min": 0,
            "max": 1,
            "prefix": ""
          }
        },
        {
          "title": "Memory Usage",
          "type": "singlestat",
          "span": 6,
          "datasource": "prometheus",
          "targets": [
            {
              "target": "node_memory_MemFree_bytes / node_memory_MemTotal_bytes"
            }
          ],
          "format": "percentunit"
        }
      ]
    },
    {
      "title": "Request Traffic",
      "height": "25%",
      "panels": [
        {
          "title": "HTTP Requests",
          "type": "graph",
          "span": 12,
          "datasource": "prometheus",
          "targets": [
            {
              "target": "http_requests_total{status='2xx'}",
              "legendFormat": "Successes"
            },
            {
              "target": "http_requests_total{status!='2xx'}",
              "legendFormat": "Errors"
            }
          ],
          "seriesOverrides": [
            {
              "$$hashKey": "object:62"
              )
                {
                  "conditions": "A > 100",
                  "evalMath": true,
                  "for": "5m",
                  "message": "High Error Rate Detected!"
                }
              ],
              "target": "http_requests_total{status!='2xx'}"
            }
          ]
        }
      ]
    },
    {
      "title": "Response Times",
      "height": "25%",
      "panels": [
        {
          "title": "Average Response Time",
          "type": "graph",
          "span": 12,
          "datasource": "prometheus",
          "targets": [
            {
              "target": "http_request_duration_seconds{status='2xx'}"
            }
          ],
          "yaxes": [
            {
              "min": 0,
              "format": "s" // Format seconds
            }
          ]
        }
      ]
    },
    {
      "title": "Server Logs (Last 10 lines)",
      "height": "25%",
      "panels": [
        {
          "title": "Server Logs",
          "type": "logs",
          "span": 12,
          "datasource": "loki",
          "queries": [
            {
              "logLabel": "server_log"
            }
          ],
          "limit": 10
        }
      ]
    }
  ],
  "templating": {
    "list": []
  },
  "annotations": {
    "list": []
  }
}

                                              --------------------------------



# web servers
hostgroup "Web Servers" {
  members = ["webserver1", "webserver2"]
}

# web server template
host "Web Server Template" {
  groups = ["Web Servers"]
  vars.check_interval = 60s  # Check every minute

  # Service to check HTTP status code with email notification
  service "HTTP Status" {
    check_command = http
    vars.url = "http://localhost/3006"
    http_status_codes = [200-399]  # Expect success codes (2xx, 3xx)
    notifications = [
      "webserver_admin@example.com"  # Notify via email on failure
    ]
    notification_options = {
      # Define notification escalation options (e.g., retry after X minutes)
      "timeperiod" = "24x7"  # Always send notifications
      "retry" = 3  # Retry notification 3 times
      "retry_interval" = 10m  # Retry after 10 minutes
    }
  }

  # Service to check response time and store performance data
  service "HTTP Response Time" {
    check_command = http
    vars.url = "http://localhost/3006"
    http_status_codes = [200]  # Expect only success code (200)
    perfdata_file = http_response_time.perfdata  # Store performance data
  }

  # Additional service to check for root disk space availability
  service "Root Disk Space" {
    check_command = check_disk
    vars.mount_point = "/"  # Check root disk space
    vars.warning_threshold = 10  # Warn if free space falls below 10%
    vars.critical_threshold = 5   # Critical if free space falls below 5%
  }
}

# Define specific web servers inheriting the template with URL overrides
host "webserver1" {
  inherits "Web Server Template"
  vars.url = " "
}

host "webserver2" {
  inherits "Web Server Template"
  vars.url = " "
}
